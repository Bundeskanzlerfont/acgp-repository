// This source file is generated by Oracle tools and is subject to change
// It is a utility client for invoking the operations of the Web service port.
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.0.0, build 060119.1546.05277)

package cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas;

import java.io.BufferedInputStream;

import java.io.IOException;

import java.net.URL;

import java.util.Properties;

import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;

import oracle.webservices.transport.ClientTransport;
import oracle.webservices.OracleStub;
import javax.xml.rpc.ServiceFactory;
import javax.xml.rpc.Stub;

public class WSClientesConsultaFaseTresSoapHttpPortClient {
    private cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas.WSClientesConsultaFaseTres_PortType _port;
    
    public WSClientesConsultaFaseTresSoapHttpPortClient() throws Exception {
        ServiceFactory factory = ServiceFactory.newInstance();
        _port = ((cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas.WSClientesConsultaFaseTres_Service)factory.loadService(cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas.WSClientesConsultaFaseTres_Service.class)).getWSClientesConsultaFaseTresSoapHttpPort();
        loadResourceEndPoint();
    }
    
    public void loadResourceEndPoint() throws IOException {    
        /*URL url = this.getClass().getResource("../../WebServicesProxies.properties");
        BufferedInputStream bis = (BufferedInputStream)url.getContent();
        Properties prop = new Properties();
        prop.load(bis);
        String endpoint = prop.getProperty("cl.bicevida.bdclientes.consultas.endpoint");
        this.setEndpoint(endpoint); */
        String endpoint;
        ResourceBundle res = PropertyResourceBundle.getBundle("cl.bicevida.core.model.services.ws.proxy.WebServicesProxies");
        endpoint = res.getString("cl.bicevida.bdclientes.consultas.endpoint");
        this.setEndpoint(endpoint);
    }
    
    /**
     * @param args
     */
    public static void main(String[] args) {
        try {
            cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas.WSClientesConsultaFaseTresSoapHttpPortClient myPort = new cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas.WSClientesConsultaFaseTresSoapHttpPortClient();
            System.out.println("calling " + myPort.getEndpoint());
            System.out.println(myPort.consultaPersona("14391056").getPersonaModel().getApellidoPaterno());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * delegate all operations to the underlying implementation class.
     */
    
    public cl.bicevida.core.model.services.ws.types.actualizadatos.fasetres.ws.consulta.types.RetConsultaContratoCanalRemoto consultaContratoCanalRemoto(String rut) throws java.rmi.RemoteException {
        return _port.consultaContratoCanalRemoto(rut);
    }
    
    public cl.bicevida.core.model.services.ws.types.actualizadatos.fasetres.ws.consulta.types.RetDireccion consultaDireccion(String idDireccion) throws java.rmi.RemoteException {
        return _port.consultaDireccion(idDireccion);
    }
    
    public cl.bicevida.core.model.services.ws.types.actualizadatos.fasetres.ws.consulta.types.RetPersona consultaPersona(String rut) throws java.rmi.RemoteException {
        return _port.consultaPersona(rut);
    }
    
    
    /**
     * used to access the JAX-RPC level APIs
     * returns the interface of the port instance
     */
    public cl.bicevida.core.model.services.ws.proxy.bdclientes.consultas.WSClientesConsultaFaseTres_PortType getPort() {
        return _port;
    }
    
    public String getEndpoint() {
        return (String) ((Stub) _port)._getProperty(Stub.ENDPOINT_ADDRESS_PROPERTY);
    }
    
    public void setEndpoint(String endpoint) {
        ((Stub) _port)._setProperty(Stub.ENDPOINT_ADDRESS_PROPERTY, endpoint);
    }
    
    public String getPassword() {
        return (String) ((Stub) _port)._getProperty(Stub.PASSWORD_PROPERTY);
    }
    
    public void setPassword(String password) {
        ((Stub) _port)._setProperty(Stub.PASSWORD_PROPERTY, password);
    }
    
    public String getUsername() {
        return (String) ((Stub) _port)._getProperty(Stub.USERNAME_PROPERTY);
    }
    
    public void setUsername(String username) {
        ((Stub) _port)._setProperty(Stub.USERNAME_PROPERTY, username);
    }
    
    public void setMaintainSession(boolean maintainSession) {
        ((Stub) _port)._setProperty(Stub.SESSION_MAINTAIN_PROPERTY, Boolean.valueOf(maintainSession));
    }
    
    public boolean getMaintainSession() {
        return ((Boolean) ((Stub) _port)._getProperty(Stub.SESSION_MAINTAIN_PROPERTY)).booleanValue();
    }
    
    /**
     * returns the transport context
     */
    public ClientTransport getClientTransport() {
        return ((OracleStub) _port).getClientTransport();
    }
    
}
