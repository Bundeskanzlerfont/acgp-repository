// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.0.0, build 060119.1546.05277)

package cl.bicevida.core.model.services.ws.proxy.oid.runtime;

import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.soap.streaming.*;
import oracle.j2ee.ws.common.soap.message.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.exception.JAXRPCExceptionBase;
import oracle.j2ee.ws.common.util.SoapWithAttachmentsUtil;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import oracle.j2ee.ws.client.*;
import oracle.j2ee.ws.client.http.*;
import oracle.webservices.transport.*;
import oracle.webservices.*;
import oracle.webservices.attachments.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class OidBasicWebServiceSoapHttp_Stub
    extends oracle.j2ee.ws.client.StubBase
    implements cl.bicevida.core.model.services.ws.proxy.oid.OidBasicWebService_PortType {
    
    
    /*
     *  public constructor
     */
    public OidBasicWebServiceSoapHttp_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://canis.bicevida.cl:7777/OidServices/v2/OidBasicWebServiceSoapHttpPort");
        setSoapVersion(SOAPVersion.SOAP_11);
        setServiceName( new QName("http://utils.oidservices.bicevida.cl/","OidBasicWebService"));
        setPortName( new QName("http://utils.oidservices.bicevida.cl/","OidBasicWebServiceSoapHttpPort"));
    }
    
    /*
     *  implementation of validateUserPassword
     */
    public boolean validateUserPassword(java.lang.String cn, java.lang.String password)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(validateUserPassword_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","validateUserPassword"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_ReqS _myOidBasicWebServiceSoapHttp_validateUserPassword_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_ReqS();
            _myOidBasicWebServiceSoapHttp_validateUserPassword_ReqS.setCn(cn);
            _myOidBasicWebServiceSoapHttp_validateUserPassword_ReqS.setPassword(password);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_validateUserPassword_validateUserPassword_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_validateUserPassword_ReqS);
            _bodyBlock.setSerializer(myns1_validateUserPassword__OidBasicWebServiceSoapHttp_validateUserPassword_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//validateUserPassword");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_RespS _myOidBasicWebServiceSoapHttp_validateUserPassword_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_validateUserPassword_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_validateUserPassword_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_validateUserPassword_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of createUser
     */
    public boolean createUser(java.lang.String uid, java.lang.String cn, java.lang.String sn, java.lang.String mail, java.lang.String givenname, java.lang.String fechanacimiento, java.lang.String accountname, java.lang.String userpassword, java.lang.String telefono)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(createUser_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","createUser"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_ReqS _myOidBasicWebServiceSoapHttp_createUser_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_ReqS();
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setUid(uid);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setCn(cn);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setSn(sn);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setMail(mail);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setGivenname(givenname);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setFechanacimiento(fechanacimiento);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setAccountname(accountname);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setUserpassword(userpassword);
            _myOidBasicWebServiceSoapHttp_createUser_ReqS.setTelefono(telefono);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_createUser_createUser_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_createUser_ReqS);
            _bodyBlock.setSerializer(myns1_createUser__OidBasicWebServiceSoapHttp_createUser_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//createUser");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_RespS _myOidBasicWebServiceSoapHttp_createUser_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_createUser_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_createUser_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_createUser_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of findGroupsDN
     */
    public java.lang.String[] findGroupsDN()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(findGroupsDN_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","findGroupsDN"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_ReqS _myOidBasicWebServiceSoapHttp_findGroupsDN_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_ReqS();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_findGroupsDN_findGroupsDN_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_findGroupsDN_ReqS);
            _bodyBlock.setSerializer(myns1_findGroupsDN__OidBasicWebServiceSoapHttp_findGroupsDN_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//findGroupsDN");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_RespS _myOidBasicWebServiceSoapHttp_findGroupsDN_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_findGroupsDN_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_findGroupsDN_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_findGroupsDN_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteGroupsFromGroup
     */
    public boolean deleteGroupsFromGroup(java.lang.String group)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(deleteGroupsFromGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","deleteGroupsFromGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS _myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS.setGroup(group);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_deleteGroupsFromGroup_deleteGroupsFromGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS);
            _bodyBlock.setSerializer(myns1_deleteGroupsFromGroup__OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//deleteGroupsFromGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS _myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of findGroupsCnByFilter
     */
    public java.lang.String[] findGroupsCnByFilter(java.lang.String filtro)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(findGroupsCnByFilter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","findGroupsCnByFilter"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS _myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS();
            _myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS.setFiltro(filtro);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_findGroupsCnByFilter_findGroupsCnByFilter_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS);
            _bodyBlock.setSerializer(myns1_findGroupsCnByFilter__OidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//findGroupsCnByFilter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS _myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of findGroupsCn
     */
    public java.lang.String[] findGroupsCn()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(findGroupsCn_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","findGroupsCn"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_ReqS _myOidBasicWebServiceSoapHttp_findGroupsCn_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_ReqS();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_findGroupsCn_findGroupsCn_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_findGroupsCn_ReqS);
            _bodyBlock.setSerializer(myns1_findGroupsCn__OidBasicWebServiceSoapHttp_findGroupsCn_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//findGroupsCn");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_RespS _myOidBasicWebServiceSoapHttp_findGroupsCn_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_findGroupsCn_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_findGroupsCn_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_findGroupsCn_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of findGroupsDnByFilter
     */
    public java.lang.String[] findGroupsDnByFilter(java.lang.String filtro)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(findGroupsDnByFilter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","findGroupsDnByFilter"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS _myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS();
            _myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS.setFiltro(filtro);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_findGroupsDnByFilter_findGroupsDnByFilter_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS);
            _bodyBlock.setSerializer(myns1_findGroupsDnByFilter__OidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//findGroupsDnByFilter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS _myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteGroup
     */
    public boolean deleteGroup(java.lang.String[] groupName)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(deleteGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","deleteGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_ReqS _myOidBasicWebServiceSoapHttp_deleteGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_deleteGroup_ReqS.setGroupName(groupName);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_deleteGroup_deleteGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_deleteGroup_ReqS);
            _bodyBlock.setSerializer(myns1_deleteGroup__OidBasicWebServiceSoapHttp_deleteGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//deleteGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_RespS _myOidBasicWebServiceSoapHttp_deleteGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_deleteGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_deleteGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_deleteGroup_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of createGroup
     */
    public boolean createGroup(java.lang.String groupName, java.lang.String description)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(createGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","createGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_ReqS _myOidBasicWebServiceSoapHttp_createGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_createGroup_ReqS.setGroupName(groupName);
            _myOidBasicWebServiceSoapHttp_createGroup_ReqS.setDescription(description);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_createGroup_createGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_createGroup_ReqS);
            _bodyBlock.setSerializer(myns1_createGroup__OidBasicWebServiceSoapHttp_createGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//createGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_RespS _myOidBasicWebServiceSoapHttp_createGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_createGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_createGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_createGroup_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deallocateUserMembership
     */
    public boolean deallocateUserMembership(java.lang.String user, java.lang.String[] gruposCN)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(deallocateUserMembership_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","deallocateUserMembership"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS _myOidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS();
            _myOidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS.setUser(user);
            _myOidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS.setGruposCN(gruposCN);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_deallocateUserMembership_deallocateUserMembership_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS);
            _bodyBlock.setSerializer(myns1_deallocateUserMembership__OidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//deallocateUserMembership");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS _myOidBasicWebServiceSoapHttp_deallocateUserMembership_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_deallocateUserMembership_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_deallocateUserMembership_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_deallocateUserMembership_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of listGroupsInGroup
     */
    public java.util.List listGroupsInGroup(java.lang.String string_1)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(listGroupsInGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","listGroupsInGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS _myOidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS.setString_1(string_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_listGroupsInGroup_listGroupsInGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS);
            _bodyBlock.setSerializer(myns1_listGroupsInGroup__OidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//listGroupsInGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS _myOidBasicWebServiceSoapHttp_listGroupsInGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_listGroupsInGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_listGroupsInGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_listGroupsInGroup_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getUserGroupsDN
     */
    public java.lang.String[] getUserGroupsDN(java.lang.String user)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getUserGroupsDN_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","getUserGroupsDN"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS _myOidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS();
            _myOidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS.setUser(user);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getUserGroupsDN_getUserGroupsDN_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS);
            _bodyBlock.setSerializer(myns1_getUserGroupsDN__OidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//getUserGroupsDN");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS _myOidBasicWebServiceSoapHttp_getUserGroupsDN_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_getUserGroupsDN_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_getUserGroupsDN_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_getUserGroupsDN_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of intelliActualizarUsuario
     */
    public boolean intelliActualizarUsuario(java.lang.String pRut, java.lang.String pNombres, java.lang.String pApellidos, java.lang.String pMail, java.lang.String pFechaNacimiento, java.lang.String pUserPassword, java.lang.String pTelefono, java.lang.String[] pGroups)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(intelliActualizarUsuario_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","intelliActualizarUsuario"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS();
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPRut(pRut);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPNombres(pNombres);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPApellidos(pApellidos);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPMail(pMail);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPFechaNacimiento(pFechaNacimiento);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPUserPassword(pUserPassword);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPTelefono(pTelefono);
            _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.setPGroups(pGroups);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_intelliActualizarUsuario_intelliActualizarUsuario_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS);
            _bodyBlock.setSerializer(myns1_intelliActualizarUsuario__OidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//intelliActualizarUsuario");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of modifyUserProperty
     */
    public boolean modifyUserProperty(java.lang.String user, java.lang.String propertyName, java.lang.String[] values)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(modifyUserProperty_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","modifyUserProperty"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_ReqS _myOidBasicWebServiceSoapHttp_modifyUserProperty_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_ReqS();
            _myOidBasicWebServiceSoapHttp_modifyUserProperty_ReqS.setUser(user);
            _myOidBasicWebServiceSoapHttp_modifyUserProperty_ReqS.setPropertyName(propertyName);
            _myOidBasicWebServiceSoapHttp_modifyUserProperty_ReqS.setValues(values);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_modifyUserProperty_modifyUserProperty_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_modifyUserProperty_ReqS);
            _bodyBlock.setSerializer(myns1_modifyUserProperty__OidBasicWebServiceSoapHttp_modifyUserProperty_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//modifyUserProperty");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_RespS _myOidBasicWebServiceSoapHttp_modifyUserProperty_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_modifyUserProperty_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_modifyUserProperty_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_modifyUserProperty_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of listUsersInGroup
     */
    public java.util.List listUsersInGroup(java.lang.String string_1)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(listUsersInGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","listUsersInGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_ReqS _myOidBasicWebServiceSoapHttp_listUsersInGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_listUsersInGroup_ReqS.setString_1(string_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_listUsersInGroup_listUsersInGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_listUsersInGroup_ReqS);
            _bodyBlock.setSerializer(myns1_listUsersInGroup__OidBasicWebServiceSoapHttp_listUsersInGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//listUsersInGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_RespS _myOidBasicWebServiceSoapHttp_listUsersInGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_listUsersInGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_listUsersInGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_listUsersInGroup_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteUsersFromGroup
     */
    public boolean deleteUsersFromGroup(java.lang.String group)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(deleteUsersFromGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","deleteUsersFromGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS _myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS.setGroup(group);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_deleteUsersFromGroup_deleteUsersFromGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS);
            _bodyBlock.setSerializer(myns1_deleteUsersFromGroup__OidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//deleteUsersFromGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS _myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of allocateUserMembership
     */
    public boolean allocateUserMembership(java.lang.String user, java.lang.String[] gruposCN)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(allocateUserMembership_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","allocateUserMembership"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_ReqS _myOidBasicWebServiceSoapHttp_allocateUserMembership_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_ReqS();
            _myOidBasicWebServiceSoapHttp_allocateUserMembership_ReqS.setUser(user);
            _myOidBasicWebServiceSoapHttp_allocateUserMembership_ReqS.setGruposCN(gruposCN);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_allocateUserMembership_allocateUserMembership_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_allocateUserMembership_ReqS);
            _bodyBlock.setSerializer(myns1_allocateUserMembership__OidBasicWebServiceSoapHttp_allocateUserMembership_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//allocateUserMembership");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_RespS _myOidBasicWebServiceSoapHttp_allocateUserMembership_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_allocateUserMembership_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_allocateUserMembership_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_allocateUserMembership_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getUserPropertyValues
     */
    public java.lang.String[] getUserPropertyValues(java.lang.String user, java.lang.String propertyName)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getUserPropertyValues_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","getUserPropertyValues"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS _myOidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS();
            _myOidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS.setUser(user);
            _myOidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS.setPropertyName(propertyName);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getUserPropertyValues_getUserPropertyValues_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS);
            _bodyBlock.setSerializer(myns1_getUserPropertyValues__OidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//getUserPropertyValues");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS _myOidBasicWebServiceSoapHttp_getUserPropertyValues_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_getUserPropertyValues_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_getUserPropertyValues_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_getUserPropertyValues_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getUserGroupsCN
     */
    public java.lang.String[] getUserGroupsCN(java.lang.String user)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getUserGroupsCN_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","getUserGroupsCN"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS _myOidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS();
            _myOidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS.setUser(user);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getUserGroupsCN_getUserGroupsCN_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS);
            _bodyBlock.setSerializer(myns1_getUserGroupsCN__OidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//getUserGroupsCN");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS _myOidBasicWebServiceSoapHttp_getUserGroupsCN_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_getUserGroupsCN_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_getUserGroupsCN_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_getUserGroupsCN_RespS.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deallocateGroupToMainGroup
     */
    public boolean deallocateGroupToMainGroup(java.lang.String groupMain, java.lang.String groupChild)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(deallocateGroupToMainGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","deallocateGroupToMainGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS.setGroupMain(groupMain);
            _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS.setGroupChild(groupChild);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_deallocateGroupToMainGroup_deallocateGroupToMainGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS);
            _bodyBlock.setSerializer(myns1_deallocateGroupToMainGroup__OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//deallocateGroupToMainGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of allocateGroupToMainGroup
     */
    public boolean allocateGroupToMainGroup(java.lang.String groupMain, java.lang.String groupChild)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(allocateGroupToMainGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","allocateGroupToMainGroup"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS();
            _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS.setGroupMain(groupMain);
            _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS.setGroupChild(groupChild);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_allocateGroupToMainGroup_allocateGroupToMainGroup_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS);
            _bodyBlock.setSerializer(myns1_allocateGroupToMainGroup__OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//allocateGroupToMainGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of existsUser
     */
    public boolean existsUser(java.lang.String user)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(existsUser_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","existsUser"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_ReqS _myOidBasicWebServiceSoapHttp_existsUser_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_ReqS();
            _myOidBasicWebServiceSoapHttp_existsUser_ReqS.setUser(user);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_existsUser_existsUser_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_existsUser_ReqS);
            _bodyBlock.setSerializer(myns1_existsUser__OidBasicWebServiceSoapHttp_existsUser_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//existsUser");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_RespS _myOidBasicWebServiceSoapHttp_existsUser_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_existsUser_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_existsUser_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_existsUser_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of createUser2
     */
    public boolean createUser2(java.lang.String[] propertyNames, java.lang.String[] propertyValues)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(createUser2_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","createUser2"));
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_ReqS _myOidBasicWebServiceSoapHttp_createUser2_ReqS = new cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_ReqS();
            _myOidBasicWebServiceSoapHttp_createUser2_ReqS.setPropertyNames(propertyNames);
            _myOidBasicWebServiceSoapHttp_createUser2_ReqS.setPropertyValues(propertyValues);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_createUser2_createUser2_QNAME);
            _bodyBlock.setValue(_myOidBasicWebServiceSoapHttp_createUser2_ReqS);
            _bodyBlock.setSerializer(myns1_createUser2__OidBasicWebServiceSoapHttp_createUser2_ReqS_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://utils.oidservices.bicevida.cl//createUser2");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_RespS _myOidBasicWebServiceSoapHttp_createUser2_RespS = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myOidBasicWebServiceSoapHttp_createUser2_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_RespS)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myOidBasicWebServiceSoapHttp_createUser2_RespS =
                    (cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_RespS)_responseObj;
            }
            
            return _myOidBasicWebServiceSoapHttp_createUser2_RespS.isResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case validateUserPassword_OPCODE:
                _deserialize_validateUserPassword(bodyReader, deserializationContext, state);
                break;
            case createUser_OPCODE:
                _deserialize_createUser(bodyReader, deserializationContext, state);
                break;
            case findGroupsDN_OPCODE:
                _deserialize_findGroupsDN(bodyReader, deserializationContext, state);
                break;
            case deleteGroupsFromGroup_OPCODE:
                _deserialize_deleteGroupsFromGroup(bodyReader, deserializationContext, state);
                break;
            case findGroupsCnByFilter_OPCODE:
                _deserialize_findGroupsCnByFilter(bodyReader, deserializationContext, state);
                break;
            case findGroupsCn_OPCODE:
                _deserialize_findGroupsCn(bodyReader, deserializationContext, state);
                break;
            case findGroupsDnByFilter_OPCODE:
                _deserialize_findGroupsDnByFilter(bodyReader, deserializationContext, state);
                break;
            case deleteGroup_OPCODE:
                _deserialize_deleteGroup(bodyReader, deserializationContext, state);
                break;
            case createGroup_OPCODE:
                _deserialize_createGroup(bodyReader, deserializationContext, state);
                break;
            case deallocateUserMembership_OPCODE:
                _deserialize_deallocateUserMembership(bodyReader, deserializationContext, state);
                break;
            case listGroupsInGroup_OPCODE:
                _deserialize_listGroupsInGroup(bodyReader, deserializationContext, state);
                break;
            case getUserGroupsDN_OPCODE:
                _deserialize_getUserGroupsDN(bodyReader, deserializationContext, state);
                break;
            case intelliActualizarUsuario_OPCODE:
                _deserialize_intelliActualizarUsuario(bodyReader, deserializationContext, state);
                break;
            case modifyUserProperty_OPCODE:
                _deserialize_modifyUserProperty(bodyReader, deserializationContext, state);
                break;
            case listUsersInGroup_OPCODE:
                _deserialize_listUsersInGroup(bodyReader, deserializationContext, state);
                break;
            case deleteUsersFromGroup_OPCODE:
                _deserialize_deleteUsersFromGroup(bodyReader, deserializationContext, state);
                break;
            case allocateUserMembership_OPCODE:
                _deserialize_allocateUserMembership(bodyReader, deserializationContext, state);
                break;
            case getUserPropertyValues_OPCODE:
                _deserialize_getUserPropertyValues(bodyReader, deserializationContext, state);
                break;
            case getUserGroupsCN_OPCODE:
                _deserialize_getUserGroupsCN(bodyReader, deserializationContext, state);
                break;
            case deallocateGroupToMainGroup_OPCODE:
                _deserialize_deallocateGroupToMainGroup(bodyReader, deserializationContext, state);
                break;
            case allocateGroupToMainGroup_OPCODE:
                _deserialize_allocateGroupToMainGroup(bodyReader, deserializationContext, state);
                break;
            case existsUser_OPCODE:
                _deserialize_existsUser(bodyReader, deserializationContext, state);
                break;
            case createUser2_OPCODE:
                _deserialize_createUser2(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the validateUserPassword operation.
     */
    private void _deserialize_validateUserPassword(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_validateUserPassword_RespSObj =
                myns1_validateUserPasswordResponse__OidBasicWebServiceSoapHttp_validateUserPassword_RespS_LiteralSerializer.deserialize(ns1_validateUserPassword_validateUserPasswordResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_validateUserPassword_validateUserPasswordResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_validateUserPassword_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the createUser operation.
     */
    private void _deserialize_createUser(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_createUser_RespSObj =
                myns1_createUserResponse__OidBasicWebServiceSoapHttp_createUser_RespS_LiteralSerializer.deserialize(ns1_createUser_createUserResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_createUser_createUserResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_createUser_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the findGroupsDN operation.
     */
    private void _deserialize_findGroupsDN(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_findGroupsDN_RespSObj =
                myns1_findGroupsDNResponse__OidBasicWebServiceSoapHttp_findGroupsDN_RespS_LiteralSerializer.deserialize(ns1_findGroupsDN_findGroupsDNResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findGroupsDN_findGroupsDNResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_findGroupsDN_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the deleteGroupsFromGroup operation.
     */
    private void _deserialize_deleteGroupsFromGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespSObj =
                myns1_deleteGroupsFromGroupResponse__OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS_LiteralSerializer.deserialize(ns1_deleteGroupsFromGroup_deleteGroupsFromGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_deleteGroupsFromGroup_deleteGroupsFromGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the findGroupsCnByFilter operation.
     */
    private void _deserialize_findGroupsCnByFilter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespSObj =
                myns1_findGroupsCnByFilterResponse__OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS_LiteralSerializer.deserialize(ns1_findGroupsCnByFilter_findGroupsCnByFilterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findGroupsCnByFilter_findGroupsCnByFilterResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the findGroupsCn operation.
     */
    private void _deserialize_findGroupsCn(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_findGroupsCn_RespSObj =
                myns1_findGroupsCnResponse__OidBasicWebServiceSoapHttp_findGroupsCn_RespS_LiteralSerializer.deserialize(ns1_findGroupsCn_findGroupsCnResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findGroupsCn_findGroupsCnResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_findGroupsCn_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the findGroupsDnByFilter operation.
     */
    private void _deserialize_findGroupsDnByFilter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespSObj =
                myns1_findGroupsDnByFilterResponse__OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS_LiteralSerializer.deserialize(ns1_findGroupsDnByFilter_findGroupsDnByFilterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findGroupsDnByFilter_findGroupsDnByFilterResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the deleteGroup operation.
     */
    private void _deserialize_deleteGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_deleteGroup_RespSObj =
                myns1_deleteGroupResponse__OidBasicWebServiceSoapHttp_deleteGroup_RespS_LiteralSerializer.deserialize(ns1_deleteGroup_deleteGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_deleteGroup_deleteGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_deleteGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the createGroup operation.
     */
    private void _deserialize_createGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_createGroup_RespSObj =
                myns1_createGroupResponse__OidBasicWebServiceSoapHttp_createGroup_RespS_LiteralSerializer.deserialize(ns1_createGroup_createGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_createGroup_createGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_createGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the deallocateUserMembership operation.
     */
    private void _deserialize_deallocateUserMembership(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_deallocateUserMembership_RespSObj =
                myns1_deallocateUserMembershipResponse__OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS_LiteralSerializer.deserialize(ns1_deallocateUserMembership_deallocateUserMembershipResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_deallocateUserMembership_deallocateUserMembershipResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_deallocateUserMembership_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the listGroupsInGroup operation.
     */
    private void _deserialize_listGroupsInGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_listGroupsInGroup_RespSObj =
                myns1_listGroupsInGroupResponse__OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS_LiteralSerializer.deserialize(ns1_listGroupsInGroup_listGroupsInGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_listGroupsInGroup_listGroupsInGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_listGroupsInGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the getUserGroupsDN operation.
     */
    private void _deserialize_getUserGroupsDN(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_getUserGroupsDN_RespSObj =
                myns1_getUserGroupsDNResponse__OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS_LiteralSerializer.deserialize(ns1_getUserGroupsDN_getUserGroupsDNResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getUserGroupsDN_getUserGroupsDNResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_getUserGroupsDN_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the intelliActualizarUsuario operation.
     */
    private void _deserialize_intelliActualizarUsuario(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespSObj =
                myns1_intelliActualizarUsuarioResponse__OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS_LiteralSerializer.deserialize(ns1_intelliActualizarUsuario_intelliActualizarUsuarioResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_intelliActualizarUsuario_intelliActualizarUsuarioResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the modifyUserProperty operation.
     */
    private void _deserialize_modifyUserProperty(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_modifyUserProperty_RespSObj =
                myns1_modifyUserPropertyResponse__OidBasicWebServiceSoapHttp_modifyUserProperty_RespS_LiteralSerializer.deserialize(ns1_modifyUserProperty_modifyUserPropertyResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_modifyUserProperty_modifyUserPropertyResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_modifyUserProperty_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the listUsersInGroup operation.
     */
    private void _deserialize_listUsersInGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_listUsersInGroup_RespSObj =
                myns1_listUsersInGroupResponse__OidBasicWebServiceSoapHttp_listUsersInGroup_RespS_LiteralSerializer.deserialize(ns1_listUsersInGroup_listUsersInGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_listUsersInGroup_listUsersInGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_listUsersInGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the deleteUsersFromGroup operation.
     */
    private void _deserialize_deleteUsersFromGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespSObj =
                myns1_deleteUsersFromGroupResponse__OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS_LiteralSerializer.deserialize(ns1_deleteUsersFromGroup_deleteUsersFromGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_deleteUsersFromGroup_deleteUsersFromGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the allocateUserMembership operation.
     */
    private void _deserialize_allocateUserMembership(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_allocateUserMembership_RespSObj =
                myns1_allocateUserMembershipResponse__OidBasicWebServiceSoapHttp_allocateUserMembership_RespS_LiteralSerializer.deserialize(ns1_allocateUserMembership_allocateUserMembershipResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_allocateUserMembership_allocateUserMembershipResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_allocateUserMembership_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the getUserPropertyValues operation.
     */
    private void _deserialize_getUserPropertyValues(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_getUserPropertyValues_RespSObj =
                myns1_getUserPropertyValuesResponse__OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS_LiteralSerializer.deserialize(ns1_getUserPropertyValues_getUserPropertyValuesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getUserPropertyValues_getUserPropertyValuesResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_getUserPropertyValues_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the getUserGroupsCN operation.
     */
    private void _deserialize_getUserGroupsCN(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_getUserGroupsCN_RespSObj =
                myns1_getUserGroupsCNResponse__OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS_LiteralSerializer.deserialize(ns1_getUserGroupsCN_getUserGroupsCNResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getUserGroupsCN_getUserGroupsCNResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_getUserGroupsCN_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the deallocateGroupToMainGroup operation.
     */
    private void _deserialize_deallocateGroupToMainGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespSObj =
                myns1_deallocateGroupToMainGroupResponse__OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS_LiteralSerializer.deserialize(ns1_deallocateGroupToMainGroup_deallocateGroupToMainGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_deallocateGroupToMainGroup_deallocateGroupToMainGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the allocateGroupToMainGroup operation.
     */
    private void _deserialize_allocateGroupToMainGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespSObj =
                myns1_allocateGroupToMainGroupResponse__OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS_LiteralSerializer.deserialize(ns1_allocateGroupToMainGroup_allocateGroupToMainGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_allocateGroupToMainGroup_allocateGroupToMainGroupResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the existsUser operation.
     */
    private void _deserialize_existsUser(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_existsUser_RespSObj =
                myns1_existsUserResponse__OidBasicWebServiceSoapHttp_existsUser_RespS_LiteralSerializer.deserialize(ns1_existsUser_existsUserResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_existsUser_existsUserResponse_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_existsUser_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the createUser2 operation.
     */
    private void _deserialize_createUser2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOidBasicWebServiceSoapHttp_createUser2_RespSObj =
                myns1_createUser2Response__OidBasicWebServiceSoapHttp_createUser2_RespS_LiteralSerializer.deserialize(ns1_createUser2_createUser2Response_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_createUser2_createUser2Response_QNAME);
            bodyBlock.setValue(myOidBasicWebServiceSoapHttp_createUser2_RespSObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            if (e.getSoapFaultSubCodeType() == JAXRPCExceptionBase.FAULT_CODE_NONE && e.getSoapFaultCodeType() != JAXRPCExceptionBase.FAULT_CODE_DATA_ENCODING_UNKNOWN) {
                e.setSoapFaultSubCodeType(JAXRPCExceptionBase.FAULT_CODE_BAD_ARGUMENTS);
            }
            throw e;
        }
    }
    
    
    
    
    public String _getEncodingStyle() {
        return SOAPEncodingConstants.getSOAPEncodingConstants(soapVersion).getURIEncoding();
    }
    
    public void _setEncodingStyle(String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    public ClientTransport getClientTransport() {
        return super._getTransport();
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    /*
     * This method handles the case of an empty SOAP body.
     */
    protected void _handleEmptyBody(XMLReader reader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        myns1_existsUserResponse__OidBasicWebServiceSoapHttp_existsUser_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_RespS.class, ns1_existsUserResponse_TYPE_QNAME);
        myns1_intelliActualizarUsuario__OidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS.class, ns1_intelliActualizarUsuario_TYPE_QNAME);
        myns1_existsUser__OidBasicWebServiceSoapHttp_existsUser_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_existsUser_ReqS.class, ns1_existsUser_TYPE_QNAME);
        myns1_deallocateUserMembershipResponse__OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS.class, ns1_deallocateUserMembershipResponse_TYPE_QNAME);
        myns1_deleteUsersFromGroupResponse__OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS.class, ns1_deleteUsersFromGroupResponse_TYPE_QNAME);
        myns1_findGroupsCnByFilter__OidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS.class, ns1_findGroupsCnByFilter_TYPE_QNAME);
        myns1_createUser__OidBasicWebServiceSoapHttp_createUser_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_ReqS.class, ns1_createUser_TYPE_QNAME);
        myns1_getUserPropertyValuesResponse__OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS.class, ns1_getUserPropertyValuesResponse_TYPE_QNAME);
        myns1_listGroupsInGroup__OidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS.class, ns1_listGroupsInGroup_TYPE_QNAME);
        myns1_createGroup__OidBasicWebServiceSoapHttp_createGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_ReqS.class, ns1_createGroup_TYPE_QNAME);
        myns1_deleteGroupsFromGroup__OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS.class, ns1_deleteGroupsFromGroup_TYPE_QNAME);
        myns1_validateUserPasswordResponse__OidBasicWebServiceSoapHttp_validateUserPassword_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_RespS.class, ns1_validateUserPasswordResponse_TYPE_QNAME);
        myns1_createUser2Response__OidBasicWebServiceSoapHttp_createUser2_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_RespS.class, ns1_createUser2Response_TYPE_QNAME);
        myns1_allocateGroupToMainGroup__OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS.class, ns1_allocateGroupToMainGroup_TYPE_QNAME);
        myns1_intelliActualizarUsuarioResponse__OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS.class, ns1_intelliActualizarUsuarioResponse_TYPE_QNAME);
        myns1_findGroupsCn__OidBasicWebServiceSoapHttp_findGroupsCn_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_ReqS.class, ns1_findGroupsCn_TYPE_QNAME);
        myns1_allocateUserMembershipResponse__OidBasicWebServiceSoapHttp_allocateUserMembership_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_RespS.class, ns1_allocateUserMembershipResponse_TYPE_QNAME);
        myns1_deallocateGroupToMainGroupResponse__OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS.class, ns1_deallocateGroupToMainGroupResponse_TYPE_QNAME);
        myns1_validateUserPassword__OidBasicWebServiceSoapHttp_validateUserPassword_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_validateUserPassword_ReqS.class, ns1_validateUserPassword_TYPE_QNAME);
        myns1_deleteUsersFromGroup__OidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS.class, ns1_deleteUsersFromGroup_TYPE_QNAME);
        myns1_getUserGroupsCNResponse__OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS.class, ns1_getUserGroupsCNResponse_TYPE_QNAME);
        myns1_allocateGroupToMainGroupResponse__OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS.class, ns1_allocateGroupToMainGroupResponse_TYPE_QNAME);
        myns1_createUser2__OidBasicWebServiceSoapHttp_createUser2_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser2_ReqS.class, ns1_createUser2_TYPE_QNAME);
        myns1_findGroupsCnResponse__OidBasicWebServiceSoapHttp_findGroupsCn_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCn_RespS.class, ns1_findGroupsCnResponse_TYPE_QNAME);
        myns1_listUsersInGroup__OidBasicWebServiceSoapHttp_listUsersInGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_ReqS.class, ns1_listUsersInGroup_TYPE_QNAME);
        myns1_allocateUserMembership__OidBasicWebServiceSoapHttp_allocateUserMembership_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_allocateUserMembership_ReqS.class, ns1_allocateUserMembership_TYPE_QNAME);
        myns1_findGroupsDnByFilterResponse__OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS.class, ns1_findGroupsDnByFilterResponse_TYPE_QNAME);
        myns1_deallocateUserMembership__OidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS.class, ns1_deallocateUserMembership_TYPE_QNAME);
        myns1_deleteGroup__OidBasicWebServiceSoapHttp_deleteGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_ReqS.class, ns1_deleteGroup_TYPE_QNAME);
        myns1_getUserGroupsDNResponse__OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS.class, ns1_getUserGroupsDNResponse_TYPE_QNAME);
        myns1_deleteGroupResponse__OidBasicWebServiceSoapHttp_deleteGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroup_RespS.class, ns1_deleteGroupResponse_TYPE_QNAME);
        myns1_getUserPropertyValues__OidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS.class, ns1_getUserPropertyValues_TYPE_QNAME);
        myns1_findGroupsDN__OidBasicWebServiceSoapHttp_findGroupsDN_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_ReqS.class, ns1_findGroupsDN_TYPE_QNAME);
        myns1_createUserResponse__OidBasicWebServiceSoapHttp_createUser_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createUser_RespS.class, ns1_createUserResponse_TYPE_QNAME);
        myns1_listGroupsInGroupResponse__OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS.class, ns1_listGroupsInGroupResponse_TYPE_QNAME);
        myns1_deallocateGroupToMainGroup__OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS.class, ns1_deallocateGroupToMainGroup_TYPE_QNAME);
        myns1_modifyUserProperty__OidBasicWebServiceSoapHttp_modifyUserProperty_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_ReqS.class, ns1_modifyUserProperty_TYPE_QNAME);
        myns1_deleteGroupsFromGroupResponse__OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS.class, ns1_deleteGroupsFromGroupResponse_TYPE_QNAME);
        myns1_modifyUserPropertyResponse__OidBasicWebServiceSoapHttp_modifyUserProperty_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_modifyUserProperty_RespS.class, ns1_modifyUserPropertyResponse_TYPE_QNAME);
        myns1_findGroupsDnByFilter__OidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS.class, ns1_findGroupsDnByFilter_TYPE_QNAME);
        myns1_findGroupsDNResponse__OidBasicWebServiceSoapHttp_findGroupsDN_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsDN_RespS.class, ns1_findGroupsDNResponse_TYPE_QNAME);
        myns1_getUserGroupsDN__OidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS.class, ns1_getUserGroupsDN_TYPE_QNAME);
        myns1_getUserGroupsCN__OidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS.class, ns1_getUserGroupsCN_TYPE_QNAME);
        myns1_listUsersInGroupResponse__OidBasicWebServiceSoapHttp_listUsersInGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_listUsersInGroup_RespS.class, ns1_listUsersInGroupResponse_TYPE_QNAME);
        myns1_findGroupsCnByFilterResponse__OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS.class, ns1_findGroupsCnByFilterResponse_TYPE_QNAME);
        myns1_createGroupResponse__OidBasicWebServiceSoapHttp_createGroup_RespS_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", cl.bicevida.core.model.services.ws.proxy.oid.runtime.OidBasicWebServiceSoapHttp_createGroup_RespS.class, ns1_createGroupResponse_TYPE_QNAME);
    }
    
    private static final QName _portName = new QName("http://utils.oidservices.bicevida.cl/", "OidBasicWebServiceSoapHttpPort");
    private static final int validateUserPassword_OPCODE = 0;
    private static final int createUser_OPCODE = 1;
    private static final int findGroupsDN_OPCODE = 2;
    private static final int deleteGroupsFromGroup_OPCODE = 3;
    private static final int findGroupsCnByFilter_OPCODE = 4;
    private static final int findGroupsCn_OPCODE = 5;
    private static final int findGroupsDnByFilter_OPCODE = 6;
    private static final int deleteGroup_OPCODE = 7;
    private static final int createGroup_OPCODE = 8;
    private static final int deallocateUserMembership_OPCODE = 9;
    private static final int listGroupsInGroup_OPCODE = 10;
    private static final int getUserGroupsDN_OPCODE = 11;
    private static final int intelliActualizarUsuario_OPCODE = 12;
    private static final int modifyUserProperty_OPCODE = 13;
    private static final int listUsersInGroup_OPCODE = 14;
    private static final int deleteUsersFromGroup_OPCODE = 15;
    private static final int allocateUserMembership_OPCODE = 16;
    private static final int getUserPropertyValues_OPCODE = 17;
    private static final int getUserGroupsCN_OPCODE = 18;
    private static final int deallocateGroupToMainGroup_OPCODE = 19;
    private static final int allocateGroupToMainGroup_OPCODE = 20;
    private static final int existsUser_OPCODE = 21;
    private static final int createUser2_OPCODE = 22;
    private static final QName ns1_validateUserPassword_validateUserPassword_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "validateUserPassword");
    private static final QName ns1_validateUserPassword_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "validateUserPassword");
    private CombinedSerializer myns1_validateUserPassword__OidBasicWebServiceSoapHttp_validateUserPassword_ReqS_LiteralSerializer;
    private static final QName ns1_validateUserPassword_validateUserPasswordResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "validateUserPasswordResponse");
    private static final QName ns1_validateUserPasswordResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "validateUserPasswordResponse");
    private CombinedSerializer myns1_validateUserPasswordResponse__OidBasicWebServiceSoapHttp_validateUserPassword_RespS_LiteralSerializer;
    private static final QName ns1_createUser_createUser_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUser");
    private static final QName ns1_createUser_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUser");
    private CombinedSerializer myns1_createUser__OidBasicWebServiceSoapHttp_createUser_ReqS_LiteralSerializer;
    private static final QName ns1_createUser_createUserResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUserResponse");
    private static final QName ns1_createUserResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUserResponse");
    private CombinedSerializer myns1_createUserResponse__OidBasicWebServiceSoapHttp_createUser_RespS_LiteralSerializer;
    private static final QName ns1_findGroupsDN_findGroupsDN_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDN");
    private static final QName ns1_findGroupsDN_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDN");
    private CombinedSerializer myns1_findGroupsDN__OidBasicWebServiceSoapHttp_findGroupsDN_ReqS_LiteralSerializer;
    private static final QName ns1_findGroupsDN_findGroupsDNResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDNResponse");
    private static final QName ns1_findGroupsDNResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDNResponse");
    private CombinedSerializer myns1_findGroupsDNResponse__OidBasicWebServiceSoapHttp_findGroupsDN_RespS_LiteralSerializer;
    private static final QName ns1_deleteGroupsFromGroup_deleteGroupsFromGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroupsFromGroup");
    private static final QName ns1_deleteGroupsFromGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroupsFromGroup");
    private CombinedSerializer myns1_deleteGroupsFromGroup__OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_ReqS_LiteralSerializer;
    private static final QName ns1_deleteGroupsFromGroup_deleteGroupsFromGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroupsFromGroupResponse");
    private static final QName ns1_deleteGroupsFromGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroupsFromGroupResponse");
    private CombinedSerializer myns1_deleteGroupsFromGroupResponse__OidBasicWebServiceSoapHttp_deleteGroupsFromGroup_RespS_LiteralSerializer;
    private static final QName ns1_findGroupsCnByFilter_findGroupsCnByFilter_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCnByFilter");
    private static final QName ns1_findGroupsCnByFilter_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCnByFilter");
    private CombinedSerializer myns1_findGroupsCnByFilter__OidBasicWebServiceSoapHttp_findGroupsCnByFilter_ReqS_LiteralSerializer;
    private static final QName ns1_findGroupsCnByFilter_findGroupsCnByFilterResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCnByFilterResponse");
    private static final QName ns1_findGroupsCnByFilterResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCnByFilterResponse");
    private CombinedSerializer myns1_findGroupsCnByFilterResponse__OidBasicWebServiceSoapHttp_findGroupsCnByFilter_RespS_LiteralSerializer;
    private static final QName ns1_findGroupsCn_findGroupsCn_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCn");
    private static final QName ns1_findGroupsCn_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCn");
    private CombinedSerializer myns1_findGroupsCn__OidBasicWebServiceSoapHttp_findGroupsCn_ReqS_LiteralSerializer;
    private static final QName ns1_findGroupsCn_findGroupsCnResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCnResponse");
    private static final QName ns1_findGroupsCnResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsCnResponse");
    private CombinedSerializer myns1_findGroupsCnResponse__OidBasicWebServiceSoapHttp_findGroupsCn_RespS_LiteralSerializer;
    private static final QName ns1_findGroupsDnByFilter_findGroupsDnByFilter_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDnByFilter");
    private static final QName ns1_findGroupsDnByFilter_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDnByFilter");
    private CombinedSerializer myns1_findGroupsDnByFilter__OidBasicWebServiceSoapHttp_findGroupsDnByFilter_ReqS_LiteralSerializer;
    private static final QName ns1_findGroupsDnByFilter_findGroupsDnByFilterResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDnByFilterResponse");
    private static final QName ns1_findGroupsDnByFilterResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "findGroupsDnByFilterResponse");
    private CombinedSerializer myns1_findGroupsDnByFilterResponse__OidBasicWebServiceSoapHttp_findGroupsDnByFilter_RespS_LiteralSerializer;
    private static final QName ns1_deleteGroup_deleteGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroup");
    private static final QName ns1_deleteGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroup");
    private CombinedSerializer myns1_deleteGroup__OidBasicWebServiceSoapHttp_deleteGroup_ReqS_LiteralSerializer;
    private static final QName ns1_deleteGroup_deleteGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroupResponse");
    private static final QName ns1_deleteGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteGroupResponse");
    private CombinedSerializer myns1_deleteGroupResponse__OidBasicWebServiceSoapHttp_deleteGroup_RespS_LiteralSerializer;
    private static final QName ns1_createGroup_createGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createGroup");
    private static final QName ns1_createGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createGroup");
    private CombinedSerializer myns1_createGroup__OidBasicWebServiceSoapHttp_createGroup_ReqS_LiteralSerializer;
    private static final QName ns1_createGroup_createGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createGroupResponse");
    private static final QName ns1_createGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createGroupResponse");
    private CombinedSerializer myns1_createGroupResponse__OidBasicWebServiceSoapHttp_createGroup_RespS_LiteralSerializer;
    private static final QName ns1_deallocateUserMembership_deallocateUserMembership_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateUserMembership");
    private static final QName ns1_deallocateUserMembership_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateUserMembership");
    private CombinedSerializer myns1_deallocateUserMembership__OidBasicWebServiceSoapHttp_deallocateUserMembership_ReqS_LiteralSerializer;
    private static final QName ns1_deallocateUserMembership_deallocateUserMembershipResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateUserMembershipResponse");
    private static final QName ns1_deallocateUserMembershipResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateUserMembershipResponse");
    private CombinedSerializer myns1_deallocateUserMembershipResponse__OidBasicWebServiceSoapHttp_deallocateUserMembership_RespS_LiteralSerializer;
    private static final QName ns1_listGroupsInGroup_listGroupsInGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listGroupsInGroup");
    private static final QName ns1_listGroupsInGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listGroupsInGroup");
    private CombinedSerializer myns1_listGroupsInGroup__OidBasicWebServiceSoapHttp_listGroupsInGroup_ReqS_LiteralSerializer;
    private static final QName ns1_listGroupsInGroup_listGroupsInGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listGroupsInGroupResponse");
    private static final QName ns1_listGroupsInGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listGroupsInGroupResponse");
    private CombinedSerializer myns1_listGroupsInGroupResponse__OidBasicWebServiceSoapHttp_listGroupsInGroup_RespS_LiteralSerializer;
    private static final QName ns1_getUserGroupsDN_getUserGroupsDN_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsDN");
    private static final QName ns1_getUserGroupsDN_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsDN");
    private CombinedSerializer myns1_getUserGroupsDN__OidBasicWebServiceSoapHttp_getUserGroupsDN_ReqS_LiteralSerializer;
    private static final QName ns1_getUserGroupsDN_getUserGroupsDNResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsDNResponse");
    private static final QName ns1_getUserGroupsDNResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsDNResponse");
    private CombinedSerializer myns1_getUserGroupsDNResponse__OidBasicWebServiceSoapHttp_getUserGroupsDN_RespS_LiteralSerializer;
    private static final QName ns1_intelliActualizarUsuario_intelliActualizarUsuario_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "intelliActualizarUsuario");
    private static final QName ns1_intelliActualizarUsuario_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "intelliActualizarUsuario");
    private CombinedSerializer myns1_intelliActualizarUsuario__OidBasicWebServiceSoapHttp_intelliActualizarUsuario_ReqS_LiteralSerializer;
    private static final QName ns1_intelliActualizarUsuario_intelliActualizarUsuarioResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "intelliActualizarUsuarioResponse");
    private static final QName ns1_intelliActualizarUsuarioResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "intelliActualizarUsuarioResponse");
    private CombinedSerializer myns1_intelliActualizarUsuarioResponse__OidBasicWebServiceSoapHttp_intelliActualizarUsuario_RespS_LiteralSerializer;
    private static final QName ns1_modifyUserProperty_modifyUserProperty_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "modifyUserProperty");
    private static final QName ns1_modifyUserProperty_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "modifyUserProperty");
    private CombinedSerializer myns1_modifyUserProperty__OidBasicWebServiceSoapHttp_modifyUserProperty_ReqS_LiteralSerializer;
    private static final QName ns1_modifyUserProperty_modifyUserPropertyResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "modifyUserPropertyResponse");
    private static final QName ns1_modifyUserPropertyResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "modifyUserPropertyResponse");
    private CombinedSerializer myns1_modifyUserPropertyResponse__OidBasicWebServiceSoapHttp_modifyUserProperty_RespS_LiteralSerializer;
    private static final QName ns1_listUsersInGroup_listUsersInGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listUsersInGroup");
    private static final QName ns1_listUsersInGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listUsersInGroup");
    private CombinedSerializer myns1_listUsersInGroup__OidBasicWebServiceSoapHttp_listUsersInGroup_ReqS_LiteralSerializer;
    private static final QName ns1_listUsersInGroup_listUsersInGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listUsersInGroupResponse");
    private static final QName ns1_listUsersInGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "listUsersInGroupResponse");
    private CombinedSerializer myns1_listUsersInGroupResponse__OidBasicWebServiceSoapHttp_listUsersInGroup_RespS_LiteralSerializer;
    private static final QName ns1_deleteUsersFromGroup_deleteUsersFromGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteUsersFromGroup");
    private static final QName ns1_deleteUsersFromGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteUsersFromGroup");
    private CombinedSerializer myns1_deleteUsersFromGroup__OidBasicWebServiceSoapHttp_deleteUsersFromGroup_ReqS_LiteralSerializer;
    private static final QName ns1_deleteUsersFromGroup_deleteUsersFromGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteUsersFromGroupResponse");
    private static final QName ns1_deleteUsersFromGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deleteUsersFromGroupResponse");
    private CombinedSerializer myns1_deleteUsersFromGroupResponse__OidBasicWebServiceSoapHttp_deleteUsersFromGroup_RespS_LiteralSerializer;
    private static final QName ns1_allocateUserMembership_allocateUserMembership_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateUserMembership");
    private static final QName ns1_allocateUserMembership_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateUserMembership");
    private CombinedSerializer myns1_allocateUserMembership__OidBasicWebServiceSoapHttp_allocateUserMembership_ReqS_LiteralSerializer;
    private static final QName ns1_allocateUserMembership_allocateUserMembershipResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateUserMembershipResponse");
    private static final QName ns1_allocateUserMembershipResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateUserMembershipResponse");
    private CombinedSerializer myns1_allocateUserMembershipResponse__OidBasicWebServiceSoapHttp_allocateUserMembership_RespS_LiteralSerializer;
    private static final QName ns1_getUserPropertyValues_getUserPropertyValues_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserPropertyValues");
    private static final QName ns1_getUserPropertyValues_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserPropertyValues");
    private CombinedSerializer myns1_getUserPropertyValues__OidBasicWebServiceSoapHttp_getUserPropertyValues_ReqS_LiteralSerializer;
    private static final QName ns1_getUserPropertyValues_getUserPropertyValuesResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserPropertyValuesResponse");
    private static final QName ns1_getUserPropertyValuesResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserPropertyValuesResponse");
    private CombinedSerializer myns1_getUserPropertyValuesResponse__OidBasicWebServiceSoapHttp_getUserPropertyValues_RespS_LiteralSerializer;
    private static final QName ns1_getUserGroupsCN_getUserGroupsCN_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsCN");
    private static final QName ns1_getUserGroupsCN_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsCN");
    private CombinedSerializer myns1_getUserGroupsCN__OidBasicWebServiceSoapHttp_getUserGroupsCN_ReqS_LiteralSerializer;
    private static final QName ns1_getUserGroupsCN_getUserGroupsCNResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsCNResponse");
    private static final QName ns1_getUserGroupsCNResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "getUserGroupsCNResponse");
    private CombinedSerializer myns1_getUserGroupsCNResponse__OidBasicWebServiceSoapHttp_getUserGroupsCN_RespS_LiteralSerializer;
    private static final QName ns1_deallocateGroupToMainGroup_deallocateGroupToMainGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateGroupToMainGroup");
    private static final QName ns1_deallocateGroupToMainGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateGroupToMainGroup");
    private CombinedSerializer myns1_deallocateGroupToMainGroup__OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_ReqS_LiteralSerializer;
    private static final QName ns1_deallocateGroupToMainGroup_deallocateGroupToMainGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateGroupToMainGroupResponse");
    private static final QName ns1_deallocateGroupToMainGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "deallocateGroupToMainGroupResponse");
    private CombinedSerializer myns1_deallocateGroupToMainGroupResponse__OidBasicWebServiceSoapHttp_deallocateGroupToMainGroup_RespS_LiteralSerializer;
    private static final QName ns1_allocateGroupToMainGroup_allocateGroupToMainGroup_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateGroupToMainGroup");
    private static final QName ns1_allocateGroupToMainGroup_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateGroupToMainGroup");
    private CombinedSerializer myns1_allocateGroupToMainGroup__OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_ReqS_LiteralSerializer;
    private static final QName ns1_allocateGroupToMainGroup_allocateGroupToMainGroupResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateGroupToMainGroupResponse");
    private static final QName ns1_allocateGroupToMainGroupResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "allocateGroupToMainGroupResponse");
    private CombinedSerializer myns1_allocateGroupToMainGroupResponse__OidBasicWebServiceSoapHttp_allocateGroupToMainGroup_RespS_LiteralSerializer;
    private static final QName ns1_existsUser_existsUser_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "existsUser");
    private static final QName ns1_existsUser_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "existsUser");
    private CombinedSerializer myns1_existsUser__OidBasicWebServiceSoapHttp_existsUser_ReqS_LiteralSerializer;
    private static final QName ns1_existsUser_existsUserResponse_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "existsUserResponse");
    private static final QName ns1_existsUserResponse_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "existsUserResponse");
    private CombinedSerializer myns1_existsUserResponse__OidBasicWebServiceSoapHttp_existsUser_RespS_LiteralSerializer;
    private static final QName ns1_createUser2_createUser2_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUser2");
    private static final QName ns1_createUser2_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUser2");
    private CombinedSerializer myns1_createUser2__OidBasicWebServiceSoapHttp_createUser2_ReqS_LiteralSerializer;
    private static final QName ns1_createUser2_createUser2Response_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUser2Response");
    private static final QName ns1_createUser2Response_TYPE_QNAME = new QName("http://utils.oidservices.bicevida.cl/", "createUser2Response");
    private CombinedSerializer myns1_createUser2Response__OidBasicWebServiceSoapHttp_createUser2_RespS_LiteralSerializer;
    private static final String[] myNamespace_declarations =
                                        new String[] {
                                            "ns0", "http://utils.oidservices.bicevida.cl/",
                                            "ns1", "http://utils.oidservices.bicevida.cl/types/",
                                            "ns2", "http://www.oracle.com/webservices/internal/literal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
    
}
